# Makefile.in generated by automake 1.15 from Makefile.am.
# examples/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2014 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/agg
pkgincludedir = $(includedir)/agg
pkglibdir = $(libdir)/agg
pkglibexecdir = $(libexecdir)/agg
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-mingw32
host_triplet = x86_64-pc-mingw32
target_triplet = x86_64-pc-mingw32
noinst_PROGRAMS = aa_demo$(EXEEXT) \
	aa_test$(EXEEXT) alpha_gradient$(EXEEXT) \
	alpha_mask2$(EXEEXT) \
	alpha_mask3$(EXEEXT) alpha_mask$(EXEEXT) \
	bezier_div$(EXEEXT) bspline$(EXEEXT) \
	circles$(EXEEXT) \
	component_rendering$(EXEEXT) \
	compositing$(EXEEXT) \
	conv_contour$(EXEEXT) \
	conv_dash_marker$(EXEEXT) \
	conv_stroke$(EXEEXT) \
	distortions$(EXEEXT) \
	gamma_correction$(EXEEXT) \
	gamma_ctrl$(EXEEXT) gouraud$(EXEEXT) \
	gradients$(EXEEXT) graph_test$(EXEEXT) \
	idea$(EXEEXT) image1$(EXEEXT) \
	image_alpha$(EXEEXT) \
	image_filters2$(EXEEXT) \
	image_filters$(EXEEXT) \
	image_fltr_graph$(EXEEXT) \
	image_perspective$(EXEEXT) \
	image_resample$(EXEEXT) \
	image_transforms$(EXEEXT) \
	line_patterns$(EXEEXT) lion$(EXEEXT) \
	lion_lens$(EXEEXT) lion_outline$(EXEEXT) \
	mol_view$(EXEEXT) multi_clip$(EXEEXT) \
	pattern_fill$(EXEEXT) \
	pattern_perspective$(EXEEXT) \
	pattern_resample$(EXEEXT) \
	perspective$(EXEEXT) \
	polymorphic_renderer$(EXEEXT) \
	rasterizers2$(EXEEXT) \
	rasterizers$(EXEEXT) \
	raster_text$(EXEEXT) \
	rounded_rect$(EXEEXT) \
	scanline_boolean2$(EXEEXT) \
	scanline_boolean$(EXEEXT) \
	simple_blur$(EXEEXT) \
	trans_polar$(EXEEXT) $(am__EXEEXT_1) \
	$(am__EXEEXT_2) $(am__EXEEXT_3)
subdir = examples
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/include/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libexamples_la_LIBADD =
am__libexamples_la_SOURCES_DIST = parse_lion.cpp make_gb_poly.cpp \
	make_arrows.cpp interactive_polygon.cpp
am_libexamples_la_OBJECTS = parse_lion.lo \
	make_gb_poly.lo make_arrows.lo \
	interactive_polygon.lo
libexamples_la_OBJECTS = $(am_libexamples_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
am_libexamples_la_rpath =
#am__EXEEXT_1 =  \
#	gpc_test$(EXEEXT)
am__EXEEXT_2 = truetype_test$(EXEEXT) \
	trans_curve1$(EXEEXT) \
	trans_curve2$(EXEEXT)
am__EXEEXT_3 =  \
	freetype_test$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)
am__aa_demo_SOURCES_DIST = aa_demo.cpp
am_aa_demo_OBJECTS = aa_demo.$(OBJEXT)
aa_demo_OBJECTS = $(am_aa_demo_OBJECTS)
aa_demo_LDADD = $(LDADD)
aa_demo_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(aa_demo_LDFLAGS) $(LDFLAGS) -o $@
am__aa_test_SOURCES_DIST = aa_test.cpp
am_aa_test_OBJECTS = aa_test.$(OBJEXT)
aa_test_OBJECTS = $(am_aa_test_OBJECTS)
aa_test_LDADD = $(LDADD)
aa_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(aa_test_LDFLAGS) $(LDFLAGS) -o $@
am__alpha_gradient_SOURCES_DIST = alpha_gradient.cpp
am_alpha_gradient_OBJECTS =  \
	alpha_gradient.$(OBJEXT)
alpha_gradient_OBJECTS = $(am_alpha_gradient_OBJECTS)
alpha_gradient_LDADD = $(LDADD)
alpha_gradient_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(alpha_gradient_LDFLAGS) \
	$(LDFLAGS) -o $@
am__alpha_mask_SOURCES_DIST = alpha_mask.cpp
am_alpha_mask_OBJECTS = alpha_mask.$(OBJEXT)
alpha_mask_OBJECTS = $(am_alpha_mask_OBJECTS)
alpha_mask_LDADD = $(LDADD)
alpha_mask_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(alpha_mask_LDFLAGS) $(LDFLAGS) -o $@
am__alpha_mask2_SOURCES_DIST = alpha_mask2.cpp
am_alpha_mask2_OBJECTS = alpha_mask2.$(OBJEXT)
alpha_mask2_OBJECTS = $(am_alpha_mask2_OBJECTS)
alpha_mask2_LDADD = $(LDADD)
alpha_mask2_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(alpha_mask2_LDFLAGS) $(LDFLAGS) -o $@
am__alpha_mask3_SOURCES_DIST = alpha_mask3.cpp
am_alpha_mask3_OBJECTS = alpha_mask3.$(OBJEXT)
alpha_mask3_OBJECTS = $(am_alpha_mask3_OBJECTS)
alpha_mask3_LDADD = $(LDADD)
alpha_mask3_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(alpha_mask3_LDFLAGS) $(LDFLAGS) -o $@
am__bezier_div_SOURCES_DIST = bezier_div.cpp
am_bezier_div_OBJECTS = bezier_div.$(OBJEXT)
bezier_div_OBJECTS = $(am_bezier_div_OBJECTS)
bezier_div_LDADD = $(LDADD)
bezier_div_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(bezier_div_LDFLAGS) $(LDFLAGS) -o $@
am__bspline_SOURCES_DIST = bspline.cpp
am_bspline_OBJECTS = bspline.$(OBJEXT)
bspline_OBJECTS = $(am_bspline_OBJECTS)
bspline_LDADD = $(LDADD)
bspline_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(bspline_LDFLAGS) $(LDFLAGS) -o $@
am__circles_SOURCES_DIST = circles.cpp
am_circles_OBJECTS = circles.$(OBJEXT)
circles_OBJECTS = $(am_circles_OBJECTS)
circles_LDADD = $(LDADD)
circles_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(circles_LDFLAGS) $(LDFLAGS) -o $@
am__component_rendering_SOURCES_DIST = component_rendering.cpp
am_component_rendering_OBJECTS =  \
	component_rendering.$(OBJEXT)
component_rendering_OBJECTS = $(am_component_rendering_OBJECTS)
component_rendering_LDADD = $(LDADD)
component_rendering_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(component_rendering_LDFLAGS) \
	$(LDFLAGS) -o $@
am__compositing_SOURCES_DIST = compositing.cpp
am_compositing_OBJECTS = compositing.$(OBJEXT)
compositing_OBJECTS = $(am_compositing_OBJECTS)
compositing_LDADD = $(LDADD)
compositing_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(compositing_LDFLAGS) $(LDFLAGS) -o $@
am__conv_contour_SOURCES_DIST = conv_contour.cpp
am_conv_contour_OBJECTS =  \
	conv_contour.$(OBJEXT)
conv_contour_OBJECTS = $(am_conv_contour_OBJECTS)
conv_contour_LDADD = $(LDADD)
conv_contour_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(conv_contour_LDFLAGS) $(LDFLAGS) -o $@
am__conv_dash_marker_SOURCES_DIST = conv_dash_marker.cpp
am_conv_dash_marker_OBJECTS =  \
	conv_dash_marker.$(OBJEXT)
conv_dash_marker_OBJECTS = $(am_conv_dash_marker_OBJECTS)
conv_dash_marker_LDADD = $(LDADD)
conv_dash_marker_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(conv_dash_marker_LDFLAGS) \
	$(LDFLAGS) -o $@
am__conv_stroke_SOURCES_DIST = conv_stroke.cpp
am_conv_stroke_OBJECTS = conv_stroke.$(OBJEXT)
conv_stroke_OBJECTS = $(am_conv_stroke_OBJECTS)
conv_stroke_LDADD = $(LDADD)
conv_stroke_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(conv_stroke_LDFLAGS) $(LDFLAGS) -o $@
am__distortions_SOURCES_DIST = distortions.cpp
am_distortions_OBJECTS = distortions.$(OBJEXT)
distortions_OBJECTS = $(am_distortions_OBJECTS)
distortions_LDADD = $(LDADD)
distortions_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(distortions_LDFLAGS) $(LDFLAGS) -o $@
am__freetype_test_SOURCES_DIST = freetype_test.cpp
am_freetype_test_OBJECTS =  \
	freetype_test-freetype_test.$(OBJEXT)
freetype_test_OBJECTS = $(am_freetype_test_OBJECTS)
freetype_test_LDADD = $(LDADD)
freetype_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(freetype_test_CXXFLAGS) $(CXXFLAGS) $(freetype_test_LDFLAGS) \
	$(LDFLAGS) -o $@
am__gamma_correction_SOURCES_DIST = gamma_correction.cpp
am_gamma_correction_OBJECTS =  \
	gamma_correction.$(OBJEXT)
gamma_correction_OBJECTS = $(am_gamma_correction_OBJECTS)
gamma_correction_LDADD = $(LDADD)
gamma_correction_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(gamma_correction_LDFLAGS) \
	$(LDFLAGS) -o $@
am__gamma_ctrl_SOURCES_DIST = gamma_ctrl.cpp
am_gamma_ctrl_OBJECTS = gamma_ctrl.$(OBJEXT)
gamma_ctrl_OBJECTS = $(am_gamma_ctrl_OBJECTS)
gamma_ctrl_LDADD = $(LDADD)
gamma_ctrl_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(gamma_ctrl_LDFLAGS) $(LDFLAGS) -o $@
am__gouraud_SOURCES_DIST = gouraud.cpp
am_gouraud_OBJECTS = gouraud.$(OBJEXT)
gouraud_OBJECTS = $(am_gouraud_OBJECTS)
gouraud_LDADD = $(LDADD)
gouraud_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(gouraud_LDFLAGS) $(LDFLAGS) -o $@
am__gpc_test_SOURCES_DIST = gpc_test.cpp
am_gpc_test_OBJECTS = gpc_test.$(OBJEXT)
gpc_test_OBJECTS = $(am_gpc_test_OBJECTS)
gpc_test_LDADD = $(LDADD)
gpc_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(gpc_test_LDFLAGS) $(LDFLAGS) -o $@
am__gradients_SOURCES_DIST = gradients.cpp
am_gradients_OBJECTS = gradients.$(OBJEXT)
gradients_OBJECTS = $(am_gradients_OBJECTS)
gradients_LDADD = $(LDADD)
gradients_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(gradients_LDFLAGS) $(LDFLAGS) -o $@
am__graph_test_SOURCES_DIST = graph_test.cpp
am_graph_test_OBJECTS = graph_test.$(OBJEXT)
graph_test_OBJECTS = $(am_graph_test_OBJECTS)
graph_test_LDADD = $(LDADD)
graph_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(graph_test_LDFLAGS) $(LDFLAGS) -o $@
am__idea_SOURCES_DIST = idea.cpp
am_idea_OBJECTS = idea.$(OBJEXT)
idea_OBJECTS = $(am_idea_OBJECTS)
idea_LDADD = $(LDADD)
idea_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(idea_LDFLAGS) $(LDFLAGS) -o $@
am__image1_SOURCES_DIST = image1.cpp
am_image1_OBJECTS = image1.$(OBJEXT)
image1_OBJECTS = $(am_image1_OBJECTS)
image1_LDADD = $(LDADD)
image1_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(image1_LDFLAGS) $(LDFLAGS) -o $@
am__image_alpha_SOURCES_DIST = image_alpha.cpp
am_image_alpha_OBJECTS = image_alpha.$(OBJEXT)
image_alpha_OBJECTS = $(am_image_alpha_OBJECTS)
image_alpha_LDADD = $(LDADD)
image_alpha_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(image_alpha_LDFLAGS) $(LDFLAGS) -o $@
am__image_filters_SOURCES_DIST = image_filters.cpp
am_image_filters_OBJECTS =  \
	image_filters.$(OBJEXT)
image_filters_OBJECTS = $(am_image_filters_OBJECTS)
image_filters_LDADD = $(LDADD)
image_filters_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(image_filters_LDFLAGS) $(LDFLAGS) \
	-o $@
am__image_filters2_SOURCES_DIST = image_filters2.cpp
am_image_filters2_OBJECTS =  \
	image_filters2.$(OBJEXT)
image_filters2_OBJECTS = $(am_image_filters2_OBJECTS)
image_filters2_LDADD = $(LDADD)
image_filters2_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(image_filters2_LDFLAGS) \
	$(LDFLAGS) -o $@
am__image_fltr_graph_SOURCES_DIST = image_fltr_graph.cpp
am_image_fltr_graph_OBJECTS =  \
	image_fltr_graph.$(OBJEXT)
image_fltr_graph_OBJECTS = $(am_image_fltr_graph_OBJECTS)
image_fltr_graph_LDADD = $(LDADD)
image_fltr_graph_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(image_fltr_graph_LDFLAGS) \
	$(LDFLAGS) -o $@
am__image_perspective_SOURCES_DIST = image_perspective.cpp
am_image_perspective_OBJECTS =  \
	image_perspective.$(OBJEXT)
image_perspective_OBJECTS = $(am_image_perspective_OBJECTS)
image_perspective_LDADD = $(LDADD)
image_perspective_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(image_perspective_LDFLAGS) \
	$(LDFLAGS) -o $@
am__image_resample_SOURCES_DIST = image_resample.cpp
am_image_resample_OBJECTS =  \
	image_resample.$(OBJEXT)
image_resample_OBJECTS = $(am_image_resample_OBJECTS)
image_resample_LDADD = $(LDADD)
image_resample_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(image_resample_LDFLAGS) \
	$(LDFLAGS) -o $@
am__image_transforms_SOURCES_DIST = image_transforms.cpp
am_image_transforms_OBJECTS =  \
	image_transforms.$(OBJEXT)
image_transforms_OBJECTS = $(am_image_transforms_OBJECTS)
image_transforms_LDADD = $(LDADD)
image_transforms_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(image_transforms_LDFLAGS) \
	$(LDFLAGS) -o $@
am__line_patterns_SOURCES_DIST = line_patterns.cpp
am_line_patterns_OBJECTS =  \
	line_patterns.$(OBJEXT)
line_patterns_OBJECTS = $(am_line_patterns_OBJECTS)
line_patterns_LDADD = $(LDADD)
line_patterns_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(line_patterns_LDFLAGS) $(LDFLAGS) \
	-o $@
am__lion_SOURCES_DIST = lion.cpp
am_lion_OBJECTS = lion.$(OBJEXT)
lion_OBJECTS = $(am_lion_OBJECTS)
lion_LDADD = $(LDADD)
lion_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(lion_LDFLAGS) $(LDFLAGS) -o $@
am__lion_lens_SOURCES_DIST = lion_lens.cpp
am_lion_lens_OBJECTS = lion_lens.$(OBJEXT)
lion_lens_OBJECTS = $(am_lion_lens_OBJECTS)
lion_lens_LDADD = $(LDADD)
lion_lens_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(lion_lens_LDFLAGS) $(LDFLAGS) -o $@
am__lion_outline_SOURCES_DIST = lion_outline.cpp
am_lion_outline_OBJECTS =  \
	lion_outline.$(OBJEXT)
lion_outline_OBJECTS = $(am_lion_outline_OBJECTS)
lion_outline_LDADD = $(LDADD)
lion_outline_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(lion_outline_LDFLAGS) $(LDFLAGS) -o $@
am__mol_view_SOURCES_DIST = mol_view.cpp
am_mol_view_OBJECTS = mol_view.$(OBJEXT)
mol_view_OBJECTS = $(am_mol_view_OBJECTS)
mol_view_LDADD = $(LDADD)
mol_view_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(mol_view_LDFLAGS) $(LDFLAGS) -o $@
am__multi_clip_SOURCES_DIST = multi_clip.cpp
am_multi_clip_OBJECTS = multi_clip.$(OBJEXT)
multi_clip_OBJECTS = $(am_multi_clip_OBJECTS)
multi_clip_LDADD = $(LDADD)
multi_clip_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(multi_clip_LDFLAGS) $(LDFLAGS) -o $@
am__pattern_fill_SOURCES_DIST = pattern_fill.cpp
am_pattern_fill_OBJECTS =  \
	pattern_fill.$(OBJEXT)
pattern_fill_OBJECTS = $(am_pattern_fill_OBJECTS)
pattern_fill_LDADD = $(LDADD)
pattern_fill_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(pattern_fill_LDFLAGS) $(LDFLAGS) -o $@
am__pattern_perspective_SOURCES_DIST = pattern_perspective.cpp
am_pattern_perspective_OBJECTS =  \
	pattern_perspective.$(OBJEXT)
pattern_perspective_OBJECTS = $(am_pattern_perspective_OBJECTS)
pattern_perspective_LDADD = $(LDADD)
pattern_perspective_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(pattern_perspective_LDFLAGS) \
	$(LDFLAGS) -o $@
am__pattern_resample_SOURCES_DIST = pattern_resample.cpp
am_pattern_resample_OBJECTS =  \
	pattern_resample.$(OBJEXT)
pattern_resample_OBJECTS = $(am_pattern_resample_OBJECTS)
pattern_resample_LDADD = $(LDADD)
pattern_resample_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(pattern_resample_LDFLAGS) \
	$(LDFLAGS) -o $@
am__perspective_SOURCES_DIST = perspective.cpp
am_perspective_OBJECTS = perspective.$(OBJEXT)
perspective_OBJECTS = $(am_perspective_OBJECTS)
perspective_LDADD = $(LDADD)
perspective_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(perspective_LDFLAGS) $(LDFLAGS) -o $@
am__polymorphic_renderer_SOURCES_DIST = polymorphic_renderer.cpp
am_polymorphic_renderer_OBJECTS =  \
	polymorphic_renderer.$(OBJEXT)
polymorphic_renderer_OBJECTS = $(am_polymorphic_renderer_OBJECTS)
polymorphic_renderer_LDADD = $(LDADD)
polymorphic_renderer_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(polymorphic_renderer_LDFLAGS) \
	$(LDFLAGS) -o $@
am__raster_text_SOURCES_DIST = raster_text.cpp
am_raster_text_OBJECTS = raster_text.$(OBJEXT)
raster_text_OBJECTS = $(am_raster_text_OBJECTS)
raster_text_LDADD = $(LDADD)
raster_text_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(raster_text_LDFLAGS) $(LDFLAGS) -o $@
am__rasterizers_SOURCES_DIST = rasterizers.cpp
am_rasterizers_OBJECTS = rasterizers.$(OBJEXT)
rasterizers_OBJECTS = $(am_rasterizers_OBJECTS)
rasterizers_LDADD = $(LDADD)
rasterizers_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(rasterizers_LDFLAGS) $(LDFLAGS) -o $@
am__rasterizers2_SOURCES_DIST = rasterizers2.cpp
am_rasterizers2_OBJECTS =  \
	rasterizers2.$(OBJEXT)
rasterizers2_OBJECTS = $(am_rasterizers2_OBJECTS)
rasterizers2_LDADD = $(LDADD)
rasterizers2_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(rasterizers2_LDFLAGS) $(LDFLAGS) -o $@
am__rounded_rect_SOURCES_DIST = rounded_rect.cpp
am_rounded_rect_OBJECTS =  \
	rounded_rect.$(OBJEXT)
rounded_rect_OBJECTS = $(am_rounded_rect_OBJECTS)
rounded_rect_LDADD = $(LDADD)
rounded_rect_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(rounded_rect_LDFLAGS) $(LDFLAGS) -o $@
am__scanline_boolean_SOURCES_DIST = scanline_boolean.cpp
am_scanline_boolean_OBJECTS =  \
	scanline_boolean.$(OBJEXT)
scanline_boolean_OBJECTS = $(am_scanline_boolean_OBJECTS)
scanline_boolean_LDADD = $(LDADD)
scanline_boolean_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(scanline_boolean_LDFLAGS) \
	$(LDFLAGS) -o $@
am__scanline_boolean2_SOURCES_DIST = scanline_boolean2.cpp
am_scanline_boolean2_OBJECTS =  \
	scanline_boolean2.$(OBJEXT)
scanline_boolean2_OBJECTS = $(am_scanline_boolean2_OBJECTS)
scanline_boolean2_LDADD = $(LDADD)
scanline_boolean2_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(scanline_boolean2_LDFLAGS) \
	$(LDFLAGS) -o $@
am__simple_blur_SOURCES_DIST = simple_blur.cpp
am_simple_blur_OBJECTS = simple_blur.$(OBJEXT)
simple_blur_OBJECTS = $(am_simple_blur_OBJECTS)
simple_blur_LDADD = $(LDADD)
simple_blur_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(simple_blur_LDFLAGS) $(LDFLAGS) -o $@
am__trans_curve1_SOURCES_DIST = trans_curve1.cpp
am_trans_curve1_OBJECTS =  \
	trans_curve1.$(OBJEXT)
trans_curve1_OBJECTS = $(am_trans_curve1_OBJECTS)
trans_curve1_LDADD = $(LDADD)
trans_curve1_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(trans_curve1_LDFLAGS) $(LDFLAGS) -o $@
am__trans_curve2_SOURCES_DIST = trans_curve2.cpp
am_trans_curve2_OBJECTS =  \
	trans_curve2.$(OBJEXT)
trans_curve2_OBJECTS = $(am_trans_curve2_OBJECTS)
trans_curve2_LDADD = $(LDADD)
trans_curve2_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(trans_curve2_LDFLAGS) $(LDFLAGS) -o $@
am__trans_polar_SOURCES_DIST = trans_polar.cpp
am_trans_polar_OBJECTS = trans_polar.$(OBJEXT)
trans_polar_OBJECTS = $(am_trans_polar_OBJECTS)
trans_polar_LDADD = $(LDADD)
trans_polar_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(trans_polar_LDFLAGS) $(LDFLAGS) -o $@
am__truetype_test_SOURCES_DIST = truetype_test.cpp
am_truetype_test_OBJECTS =  \
	truetype_test.$(OBJEXT)
truetype_test_OBJECTS = $(am_truetype_test_OBJECTS)
truetype_test_LDADD = $(LDADD)
truetype_test_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(truetype_test_LDFLAGS) $(LDFLAGS) \
	-o $@
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I. -I$(top_builddir)/include
depcomp =
am__depfiles_maybe =
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(libexamples_la_SOURCES) $(aa_demo_SOURCES) \
	$(aa_test_SOURCES) $(alpha_gradient_SOURCES) \
	$(alpha_mask_SOURCES) $(alpha_mask2_SOURCES) \
	$(alpha_mask3_SOURCES) $(bezier_div_SOURCES) \
	$(bspline_SOURCES) $(circles_SOURCES) \
	$(component_rendering_SOURCES) $(compositing_SOURCES) \
	$(conv_contour_SOURCES) $(conv_dash_marker_SOURCES) \
	$(conv_stroke_SOURCES) $(distortions_SOURCES) \
	$(freetype_test_SOURCES) $(gamma_correction_SOURCES) \
	$(gamma_ctrl_SOURCES) $(gouraud_SOURCES) $(gpc_test_SOURCES) \
	$(gradients_SOURCES) $(graph_test_SOURCES) $(idea_SOURCES) \
	$(image1_SOURCES) $(image_alpha_SOURCES) \
	$(image_filters_SOURCES) $(image_filters2_SOURCES) \
	$(image_fltr_graph_SOURCES) $(image_perspective_SOURCES) \
	$(image_resample_SOURCES) $(image_transforms_SOURCES) \
	$(line_patterns_SOURCES) $(lion_SOURCES) $(lion_lens_SOURCES) \
	$(lion_outline_SOURCES) $(mol_view_SOURCES) \
	$(multi_clip_SOURCES) $(pattern_fill_SOURCES) \
	$(pattern_perspective_SOURCES) $(pattern_resample_SOURCES) \
	$(perspective_SOURCES) $(polymorphic_renderer_SOURCES) \
	$(raster_text_SOURCES) $(rasterizers_SOURCES) \
	$(rasterizers2_SOURCES) $(rounded_rect_SOURCES) \
	$(scanline_boolean_SOURCES) $(scanline_boolean2_SOURCES) \
	$(simple_blur_SOURCES) $(trans_curve1_SOURCES) \
	$(trans_curve2_SOURCES) $(trans_polar_SOURCES) \
	$(truetype_test_SOURCES)
DIST_SOURCES = $(am__libexamples_la_SOURCES_DIST) \
	$(am__aa_demo_SOURCES_DIST) $(am__aa_test_SOURCES_DIST) \
	$(am__alpha_gradient_SOURCES_DIST) \
	$(am__alpha_mask_SOURCES_DIST) $(am__alpha_mask2_SOURCES_DIST) \
	$(am__alpha_mask3_SOURCES_DIST) $(am__bezier_div_SOURCES_DIST) \
	$(am__bspline_SOURCES_DIST) $(am__circles_SOURCES_DIST) \
	$(am__component_rendering_SOURCES_DIST) \
	$(am__compositing_SOURCES_DIST) \
	$(am__conv_contour_SOURCES_DIST) \
	$(am__conv_dash_marker_SOURCES_DIST) \
	$(am__conv_stroke_SOURCES_DIST) \
	$(am__distortions_SOURCES_DIST) \
	$(am__freetype_test_SOURCES_DIST) \
	$(am__gamma_correction_SOURCES_DIST) \
	$(am__gamma_ctrl_SOURCES_DIST) $(am__gouraud_SOURCES_DIST) \
	$(am__gpc_test_SOURCES_DIST) $(am__gradients_SOURCES_DIST) \
	$(am__graph_test_SOURCES_DIST) $(am__idea_SOURCES_DIST) \
	$(am__image1_SOURCES_DIST) $(am__image_alpha_SOURCES_DIST) \
	$(am__image_filters_SOURCES_DIST) \
	$(am__image_filters2_SOURCES_DIST) \
	$(am__image_fltr_graph_SOURCES_DIST) \
	$(am__image_perspective_SOURCES_DIST) \
	$(am__image_resample_SOURCES_DIST) \
	$(am__image_transforms_SOURCES_DIST) \
	$(am__line_patterns_SOURCES_DIST) $(am__lion_SOURCES_DIST) \
	$(am__lion_lens_SOURCES_DIST) $(am__lion_outline_SOURCES_DIST) \
	$(am__mol_view_SOURCES_DIST) $(am__multi_clip_SOURCES_DIST) \
	$(am__pattern_fill_SOURCES_DIST) \
	$(am__pattern_perspective_SOURCES_DIST) \
	$(am__pattern_resample_SOURCES_DIST) \
	$(am__perspective_SOURCES_DIST) \
	$(am__polymorphic_renderer_SOURCES_DIST) \
	$(am__raster_text_SOURCES_DIST) \
	$(am__rasterizers_SOURCES_DIST) \
	$(am__rasterizers2_SOURCES_DIST) \
	$(am__rounded_rect_SOURCES_DIST) \
	$(am__scanline_boolean_SOURCES_DIST) \
	$(am__scanline_boolean2_SOURCES_DIST) \
	$(am__simple_blur_SOURCES_DIST) \
	$(am__trans_curve1_SOURCES_DIST) \
	$(am__trans_curve2_SOURCES_DIST) \
	$(am__trans_polar_SOURCES_DIST) \
	$(am__truetype_test_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.in
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/meesokim/agg-2.5/missing aclocal-1.15
AGG_LIB_VERSION = 2:4:0
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 1
AR = ar
AUTOCONF = ${SHELL} /home/meesokim/agg-2.5/missing autoconf
AUTOHEADER = ${SHELL} /home/meesokim/agg-2.5/missing autoheader
AUTOMAKE = ${SHELL} /home/meesokim/agg-2.5/missing automake-1.15
AWK = gawk
CC = gcc
CCDEPMODE = depmode=none
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -g -O2
CYGPATH_W = cygpath -w
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DLLTOOL = dlltool
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = .exe
FGREP = /usr/bin/grep -F
FREETYPE_CFLAGS = -mms-bitfields -I/mingw32/include/freetype2 -I/mingw32/include -I/mingw32/include/libpng16 -I/mingw32/include/harfbuzz -I/mingw32/include/glib-2.0 -I/mingw32/lib/glib-2.0/include
FREETYPE_LIBS = -L/mingw32/lib -lfreetype -lz -lbz2 -lpng16 -lz -lharfbuzz -lglib-2.0 -lintl -pthread -lws2_32 -lole32 -lwinmm -lshlwapi -lintl -liconv
GREP = /usr/bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LD = C:/msys64/mingw32/i686-w64-mingw32/bin/ld.exe
LDFLAGS = -all-static -static -static-libgcc -static-libstdc++ -Wl,-Bstatic -lpthread -L/mingw32/i686-w64-mingw32/lib -mwindows -liconv
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIPO = 
LN_S = cp -pR
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/meesokim/agg-2.5/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
NM = /mingw32/bin/nm -B
NMEDIT = 
OBJDUMP = objdump
OBJEXT = o
OSX_CFLAGS = 
OSX_LIBS = 
OTOOL = 
OTOOL64 = 
PACKAGE = agg
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = /mingw32/lib/pkgconfig:/mingw32/share/pkgconfig
PREFERED_PLATFORM = win32
RANLIB = ranlib
SDL_CFLAGS = -I/mingw32/include/SDL -D_GNU_SOURCE=1 -Dmain=SDL_main
SDL_CONFIG = /mingw32/bin/sdl-config
SDL_LIBS = -L/mingw32/lib -lmingw32 -lSDLmain -lSDL -mwindows
SED = /usr/bin/sed
SET_MAKE = 
SHELL = /bin/sh
STRIP = strip
VERSION = 2.5.0
WINDOWS_CFLAGS = 
WINDOWS_LIBS = 
XMKMF = 
abs_builddir = /home/meesokim/agg-2.5/examples
abs_srcdir = /home/meesokim/agg-2.5/examples
abs_top_builddir = /home/meesokim/agg-2.5
abs_top_srcdir = /home/meesokim/agg-2.5
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = $${TAR-tar} chof - "$$tardir"
am__untar = $${TAR-tar} xf -
bindir = ${exec_prefix}/bin
build = x86_64-pc-mingw32
build_alias = 
build_cpu = x86_64
build_os = mingw32
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-mingw32
host_alias = 
host_cpu = x86_64
host_os = mingw32
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/meesokim/agg-2.5/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-mingw32
target_alias = 
target_cpu = x86_64
target_os = mingw32
target_vendor = pc
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
x_includes = NONE
x_libraries = NONE
EXTRA_DIST = X11/Makefile interactive_polygon.h pixel_formats.h \
	win32_api/aa_demo/Makefile win32_api/aa_demo/aa_demo.dsp \
	win32_api/aa_demo/aa_demo.dsw win32_api/Makefile \
	win32_api/examples.dsw win32_api/aa_test/Makefile \
	win32_api/aa_test/aa_test.dsp win32_api/aa_test/aa_test.dsw \
	win32_api/alpha_gradient/Makefile \
	win32_api/alpha_gradient/alpha_gradient.dsp \
	win32_api/alpha_gradient/alpha_gradient.dsw \
	win32_api/alpha_mask/Makefile \
	win32_api/alpha_mask/alpha_mask.dsp \
	win32_api/alpha_mask/alpha_mask.dsw \
	win32_api/alpha_mask2/Makefile \
	win32_api/alpha_mask2/alpha_mask2.dsp \
	win32_api/alpha_mask2/alpha_mask2.dsw \
	win32_api/alpha_mask3/Makefile \
	win32_api/alpha_mask3/alpha_mask3.dsp \
	win32_api/alpha_mask3/alpha_mask3.dsw \
	win32_api/bezier_div/Makefile \
	win32_api/bezier_div/bezier_div.dsp \
	win32_api/bezier_div/bezier_div.dsw win32_api/bspline/Makefile \
	win32_api/bspline/bspline.dsp win32_api/bspline/bspline.dsw \
	win32_api/circles/Makefile win32_api/circles/circles.dsp \
	win32_api/circles/circles.dsw \
	win32_api/component_rendering/Makefile \
	win32_api/component_rendering/component_rendering.dsp \
	win32_api/component_rendering/component_rendering.dsw \
	win32_api/compositing/Makefile \
	win32_api/compositing/compositing.dsp \
	win32_api/compositing/compositing.dsw \
	win32_api/compositing/readme win32_api/conv_contour/Makefile \
	win32_api/conv_contour/conv_contour.dsp \
	win32_api/conv_contour/conv_contour.dsw \
	win32_api/conv_dash_marker/Makefile \
	win32_api/conv_dash_marker/conv_dash_marker.dsp \
	win32_api/conv_dash_marker/conv_dash_marker.dsw \
	win32_api/conv_stroke/Makefile \
	win32_api/conv_stroke/conv_stroke.dsp \
	win32_api/conv_stroke/conv_stroke.dsw \
	win32_api/distortions/Makefile \
	win32_api/distortions/distortions.dsp \
	win32_api/distortions/distortions.dsw \
	win32_api/distortions/readme win32_api/freetype_test/Makefile \
	win32_api/freetype_test/freetype_test.dsp \
	win32_api/freetype_test/freetype_test.dsw \
	win32_api/freetype_test/readme \
	win32_api/gamma_correction/Makefile \
	win32_api/gamma_correction/gamma_correction.dsp \
	win32_api/gamma_correction/gamma_correction.dsw \
	win32_api/gamma_ctrl/Makefile \
	win32_api/gamma_ctrl/gamma_ctrl.dsp \
	win32_api/gamma_ctrl/gamma_ctrl.dsw win32_api/gouraud/Makefile \
	win32_api/gouraud/gouraud.dsp win32_api/gouraud/gouraud.dsw \
	win32_api/gpc_test/Makefile win32_api/gpc_test/gpc_test.dsp \
	win32_api/gpc_test/gpc_test.dsw win32_api/gradients/Makefile \
	win32_api/gradients/gradients.dsp \
	win32_api/gradients/gradients.dsw \
	win32_api/gradients/settings.dat win32_api/graph_test/Makefile \
	win32_api/graph_test/graph_test.dsp \
	win32_api/graph_test/graph_test.dsw win32_api/idea/Makefile \
	win32_api/idea/idea.dsp win32_api/idea/idea.dsw \
	win32_api/image1/Makefile win32_api/image1/image1.dsp \
	win32_api/image1/image1.dsw win32_api/image1/readme \
	win32_api/image_alpha/Makefile \
	win32_api/image_alpha/image_alpha.dsp \
	win32_api/image_alpha/image_alpha.dsw \
	win32_api/image_alpha/readme win32_api/image_filters/Makefile \
	win32_api/image_filters/image_filters.dsp \
	win32_api/image_filters/image_filters.dsw \
	win32_api/image_filters/readme \
	win32_api/image_filters2/Makefile \
	win32_api/image_filters2/image_filters2.dsp \
	win32_api/image_filters2/image_filters2.dsw \
	win32_api/image_filters2/readme \
	win32_api/image_fltr_graph/Makefile \
	win32_api/image_fltr_graph/image_fltr_graph.dsp \
	win32_api/image_fltr_graph/image_fltr_graph.dsw \
	win32_api/image_perspective/Makefile \
	win32_api/image_perspective/image_perspective.dsp \
	win32_api/image_perspective/image_perspective.dsw \
	win32_api/image_perspective/readme \
	win32_api/image_resample/Makefile \
	win32_api/image_resample/image_resample.dsp \
	win32_api/image_resample/image_resample.dsw \
	win32_api/image_resample/readme \
	win32_api/image_transforms/Makefile \
	win32_api/image_transforms/image_transforms.dsp \
	win32_api/image_transforms/image_transforms.dsw \
	win32_api/image_transforms/readme! \
	win32_api/line_patterns/Makefile \
	win32_api/line_patterns/line_patterns.dsp \
	win32_api/line_patterns/line_patterns.dsw \
	win32_api/lion/Makefile win32_api/lion/lion.dsp \
	win32_api/lion/lion.dsw win32_api/lion_lens/Makefile \
	win32_api/lion_lens/lion_lens.dsp \
	win32_api/lion_lens/lion_lens.dsw \
	win32_api/lion_outline/Makefile \
	win32_api/lion_outline/lion_outline.dsp \
	win32_api/lion_outline/lion_outline.dsw \
	win32_api/mol_view/Makefile win32_api/mol_view/mol_view.dsp \
	win32_api/mol_view/mol_view.dsw win32_api/mol_view/readme \
	win32_api/multi_clip/Makefile \
	win32_api/multi_clip/multi_clip.dsp \
	win32_api/multi_clip/multi_clip.dsw \
	win32_api/pattern_fill/Makefile \
	win32_api/pattern_fill/pattern_fill.dsp \
	win32_api/pattern_fill/pattern_fill.dsw \
	win32_api/pattern_perspective/pattern_perspective.dsp \
	win32_api/pattern_perspective/pattern_perspective.dsw \
	win32_api/pattern_resample/Makefile \
	win32_api/pattern_resample/pattern_resample.dsp \
	win32_api/pattern_resample/pattern_resample.dsw \
	win32_api/perspective/Makefile \
	win32_api/perspective/perspective.dsp \
	win32_api/perspective/perspective.dsw \
	win32_api/polymorphic_renderer/Makefile \
	win32_api/polymorphic_renderer/polymorphic_renderer.dsp \
	win32_api/polymorphic_renderer/polymorphic_renderer.dsw \
	win32_api/pure_api/StdAfx.cpp win32_api/pure_api/StdAfx.h \
	win32_api/pure_api/pure_api.cpp \
	win32_api/pure_api/pure_api.dsp \
	win32_api/pure_api/pure_api.dsw win32_api/pure_api/pure_api.h \
	win32_api/pure_api/pure_api.ico win32_api/pure_api/pure_api.rc \
	win32_api/pure_api/resource.h win32_api/pure_api/small.ico \
	win32_api/raster_text/Makefile \
	win32_api/raster_text/raster_text.dsp \
	win32_api/raster_text/raster_text.dsw \
	win32_api/rasterizers/Makefile \
	win32_api/rasterizers/rasterizers.dsp \
	win32_api/rasterizers/rasterizers.dsw \
	win32_api/rasterizers2/Makefile \
	win32_api/rasterizers2/rasterizers2.dsp \
	win32_api/rasterizers2/rasterizers2.dsw \
	win32_api/rounded_rect/Makefile \
	win32_api/rounded_rect/rounded_rect.dsp \
	win32_api/rounded_rect/rounded_rect.dsw \
	win32_api/scanline_boolean/Makefile \
	win32_api/scanline_boolean/scanline_boolean.dsp \
	win32_api/scanline_boolean/scanline_boolean.dsw \
	win32_api/scanline_boolean2/Makefile \
	win32_api/scanline_boolean2/scanline_boolean2.dsp \
	win32_api/scanline_boolean2/scanline_boolean2.dsw \
	win32_api/simple_blur/Makefile \
	win32_api/simple_blur/simple_blur.dsp \
	win32_api/simple_blur/simple_blur.dsw \
	win32_api/trans_curve1/Makefile \
	win32_api/trans_curve1/trans_curve1.dsp \
	win32_api/trans_curve1/trans_curve1.dsw \
	win32_api/trans_curve2/Makefile \
	win32_api/trans_curve2/trans_curve2.dsp \
	win32_api/trans_curve2/trans_curve2.dsw \
	win32_api/trans_polar/Makefile \
	win32_api/trans_polar/trans_polar.dsp \
	win32_api/trans_polar/trans_polar.dsw \
	win32_api/truetype_test/Makefile \
	win32_api/truetype_test/truetype_test.dsp \
	win32_api/truetype_test/truetype_test.dsw
W32TTP = truetype_test trans_curve1 trans_curve2
FTP = freetype_test   ### these dont work : trans_curve2_ft trans_curve1_ft
#GPCP = gpc_test
INCLUDES = -I$(top_srcdir)/include -I$(top_srcdir)/font_freetype/ -I$(top_srcdir)/gpc -I$(top_srcdir)/font_win32_tt
noinst_LTLIBRARIES = libexamples.la
libexamples_la_SOURCES = parse_lion.cpp make_gb_poly.cpp make_arrows.cpp interactive_polygon.cpp
aa_demo_SOURCES = aa_demo.cpp
aa_demo_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
aa_test_SOURCES = aa_test.cpp
aa_test_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
alpha_gradient_SOURCES = alpha_gradient.cpp
alpha_gradient_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
alpha_mask2_SOURCES = alpha_mask2.cpp
alpha_mask2_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
alpha_mask3_SOURCES = alpha_mask3.cpp
alpha_mask3_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
alpha_mask_SOURCES = alpha_mask.cpp
alpha_mask_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
bezier_div_SOURCES = bezier_div.cpp
bezier_div_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
bspline_SOURCES = bspline.cpp
bspline_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
circles_SOURCES = circles.cpp
circles_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
component_rendering_SOURCES = component_rendering.cpp
component_rendering_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
compositing_SOURCES = compositing.cpp
compositing_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
conv_contour_SOURCES = conv_contour.cpp
conv_contour_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
conv_dash_marker_SOURCES = conv_dash_marker.cpp
conv_dash_marker_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
conv_stroke_SOURCES = conv_stroke.cpp
conv_stroke_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
distortions_SOURCES = distortions.cpp
distortions_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
gamma_correction_SOURCES = gamma_correction.cpp
gamma_correction_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
gamma_ctrl_SOURCES = gamma_ctrl.cpp
gamma_ctrl_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
gouraud_SOURCES = gouraud.cpp
gouraud_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
gradients_SOURCES = gradients.cpp
gradients_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
graph_test_SOURCES = graph_test.cpp
graph_test_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
idea_SOURCES = idea.cpp
idea_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
image1_SOURCES = image1.cpp
image1_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
image_alpha_SOURCES = image_alpha.cpp
image_alpha_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
image_filters2_SOURCES = image_filters2.cpp
image_filters2_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
image_filters_SOURCES = image_filters.cpp
image_filters_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
image_fltr_graph_SOURCES = image_fltr_graph.cpp
image_fltr_graph_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
image_perspective_SOURCES = image_perspective.cpp
image_perspective_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
image_resample_SOURCES = image_resample.cpp
image_resample_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
image_transforms_SOURCES = image_transforms.cpp
image_transforms_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
line_patterns_SOURCES = line_patterns.cpp
line_patterns_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
lion_SOURCES = lion.cpp
lion_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
lion_lens_SOURCES = lion_lens.cpp
lion_lens_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
lion_outline_SOURCES = lion_outline.cpp
lion_outline_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
mol_view_SOURCES = mol_view.cpp
mol_view_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
multi_clip_SOURCES = multi_clip.cpp
multi_clip_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
pattern_fill_SOURCES = pattern_fill.cpp
pattern_fill_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
pattern_perspective_SOURCES = pattern_perspective.cpp
pattern_perspective_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
pattern_resample_SOURCES = pattern_resample.cpp
pattern_resample_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
perspective_SOURCES = perspective.cpp
perspective_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
polymorphic_renderer_SOURCES = polymorphic_renderer.cpp
polymorphic_renderer_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
rasterizers2_SOURCES = rasterizers2.cpp
rasterizers2_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
rasterizers_SOURCES = rasterizers.cpp
rasterizers_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
raster_text_SOURCES = raster_text.cpp
raster_text_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
rounded_rect_SOURCES = rounded_rect.cpp
rounded_rect_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
scanline_boolean2_SOURCES = scanline_boolean2.cpp
scanline_boolean2_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
scanline_boolean_SOURCES = scanline_boolean.cpp
scanline_boolean_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
simple_blur_SOURCES = simple_blur.cpp
simple_blur_LDFLAGS = libexamples.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
trans_polar_SOURCES = trans_polar.cpp
trans_polar_LDFLAGS = $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
freetype_test_SOURCES = freetype_test.cpp
freetype_test_CXXFLAGS = -mms-bitfields -I/mingw32/include/freetype2 -I/mingw32/include -I/mingw32/include/libpng16 -I/mingw32/include/harfbuzz -I/mingw32/include/glib-2.0 -I/mingw32/lib/glib-2.0/include
freetype_test_LDFLAGS = $(top_builddir)/font_freetype/libaggfontfreetype.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
trans_curve2_ft_SOURCES = trans_curve2_ft.cpp
trans_curve2_ft_CXXFLAGS = -mms-bitfields -I/mingw32/include/freetype2 -I/mingw32/include -I/mingw32/include/libpng16 -I/mingw32/include/harfbuzz -I/mingw32/include/glib-2.0 -I/mingw32/lib/glib-2.0/include
trans_curve2_ft_LDFLAGS = $(top_builddir)/font_freetype/libaggfontfreetype.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
trans_curve1_ft_SOURCES = trans_curve1_ft.cpp
trans_curve1_ft_CXXFLAGS = -mms-bitfields -I/mingw32/include/freetype2 -I/mingw32/include -I/mingw32/include/libpng16 -I/mingw32/include/harfbuzz -I/mingw32/include/glib-2.0 -I/mingw32/lib/glib-2.0/include
trans_curve1_ft_LDFLAGS = $(top_builddir)/font_freetype/libaggfontfreetype.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
gpc_test_SOURCES = gpc_test.cpp
gpc_test_LDFLAGS = libexamples.la $(top_builddir)/gpc/libagggpc.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
truetype_test_SOURCES = truetype_test.cpp
truetype_test_LDFLAGS = $(top_builddir)/font_win32_tt/libaggfontwin32tt.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
trans_curve1_SOURCES = trans_curve1.cpp
trans_curve1_LDFLAGS = libexamples.la $(top_builddir)/font_win32_tt/libaggfontwin32tt.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
trans_curve2_SOURCES = trans_curve2.cpp
trans_curve2_LDFLAGS = libexamples.la $(top_builddir)/font_win32_tt/libaggfontwin32tt.la  $(top_builddir)/src/platform/win32/libaggplatformwin32.la $(top_builddir)/src/libagg.la
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign --ignore-deps examples/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign --ignore-deps examples/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

libexamples.la: $(libexamples_la_OBJECTS) $(libexamples_la_DEPENDENCIES) $(EXTRA_libexamples_la_DEPENDENCIES) 
	$(AM_V_CXXLD)$(CXXLINK) $(am_libexamples_la_rpath) $(libexamples_la_OBJECTS) $(libexamples_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

aa_demo$(EXEEXT): $(aa_demo_OBJECTS) $(aa_demo_DEPENDENCIES) $(EXTRA_aa_demo_DEPENDENCIES) 
	@rm -f aa_demo$(EXEEXT)
	$(AM_V_CXXLD)$(aa_demo_LINK) $(aa_demo_OBJECTS) $(aa_demo_LDADD) $(LIBS)

aa_test$(EXEEXT): $(aa_test_OBJECTS) $(aa_test_DEPENDENCIES) $(EXTRA_aa_test_DEPENDENCIES) 
	@rm -f aa_test$(EXEEXT)
	$(AM_V_CXXLD)$(aa_test_LINK) $(aa_test_OBJECTS) $(aa_test_LDADD) $(LIBS)

alpha_gradient$(EXEEXT): $(alpha_gradient_OBJECTS) $(alpha_gradient_DEPENDENCIES) $(EXTRA_alpha_gradient_DEPENDENCIES) 
	@rm -f alpha_gradient$(EXEEXT)
	$(AM_V_CXXLD)$(alpha_gradient_LINK) $(alpha_gradient_OBJECTS) $(alpha_gradient_LDADD) $(LIBS)

alpha_mask$(EXEEXT): $(alpha_mask_OBJECTS) $(alpha_mask_DEPENDENCIES) $(EXTRA_alpha_mask_DEPENDENCIES) 
	@rm -f alpha_mask$(EXEEXT)
	$(AM_V_CXXLD)$(alpha_mask_LINK) $(alpha_mask_OBJECTS) $(alpha_mask_LDADD) $(LIBS)

alpha_mask2$(EXEEXT): $(alpha_mask2_OBJECTS) $(alpha_mask2_DEPENDENCIES) $(EXTRA_alpha_mask2_DEPENDENCIES) 
	@rm -f alpha_mask2$(EXEEXT)
	$(AM_V_CXXLD)$(alpha_mask2_LINK) $(alpha_mask2_OBJECTS) $(alpha_mask2_LDADD) $(LIBS)

alpha_mask3$(EXEEXT): $(alpha_mask3_OBJECTS) $(alpha_mask3_DEPENDENCIES) $(EXTRA_alpha_mask3_DEPENDENCIES) 
	@rm -f alpha_mask3$(EXEEXT)
	$(AM_V_CXXLD)$(alpha_mask3_LINK) $(alpha_mask3_OBJECTS) $(alpha_mask3_LDADD) $(LIBS)

bezier_div$(EXEEXT): $(bezier_div_OBJECTS) $(bezier_div_DEPENDENCIES) $(EXTRA_bezier_div_DEPENDENCIES) 
	@rm -f bezier_div$(EXEEXT)
	$(AM_V_CXXLD)$(bezier_div_LINK) $(bezier_div_OBJECTS) $(bezier_div_LDADD) $(LIBS)

bspline$(EXEEXT): $(bspline_OBJECTS) $(bspline_DEPENDENCIES) $(EXTRA_bspline_DEPENDENCIES) 
	@rm -f bspline$(EXEEXT)
	$(AM_V_CXXLD)$(bspline_LINK) $(bspline_OBJECTS) $(bspline_LDADD) $(LIBS)

circles$(EXEEXT): $(circles_OBJECTS) $(circles_DEPENDENCIES) $(EXTRA_circles_DEPENDENCIES) 
	@rm -f circles$(EXEEXT)
	$(AM_V_CXXLD)$(circles_LINK) $(circles_OBJECTS) $(circles_LDADD) $(LIBS)

component_rendering$(EXEEXT): $(component_rendering_OBJECTS) $(component_rendering_DEPENDENCIES) $(EXTRA_component_rendering_DEPENDENCIES) 
	@rm -f component_rendering$(EXEEXT)
	$(AM_V_CXXLD)$(component_rendering_LINK) $(component_rendering_OBJECTS) $(component_rendering_LDADD) $(LIBS)

compositing$(EXEEXT): $(compositing_OBJECTS) $(compositing_DEPENDENCIES) $(EXTRA_compositing_DEPENDENCIES) 
	@rm -f compositing$(EXEEXT)
	$(AM_V_CXXLD)$(compositing_LINK) $(compositing_OBJECTS) $(compositing_LDADD) $(LIBS)

conv_contour$(EXEEXT): $(conv_contour_OBJECTS) $(conv_contour_DEPENDENCIES) $(EXTRA_conv_contour_DEPENDENCIES) 
	@rm -f conv_contour$(EXEEXT)
	$(AM_V_CXXLD)$(conv_contour_LINK) $(conv_contour_OBJECTS) $(conv_contour_LDADD) $(LIBS)

conv_dash_marker$(EXEEXT): $(conv_dash_marker_OBJECTS) $(conv_dash_marker_DEPENDENCIES) $(EXTRA_conv_dash_marker_DEPENDENCIES) 
	@rm -f conv_dash_marker$(EXEEXT)
	$(AM_V_CXXLD)$(conv_dash_marker_LINK) $(conv_dash_marker_OBJECTS) $(conv_dash_marker_LDADD) $(LIBS)

conv_stroke$(EXEEXT): $(conv_stroke_OBJECTS) $(conv_stroke_DEPENDENCIES) $(EXTRA_conv_stroke_DEPENDENCIES) 
	@rm -f conv_stroke$(EXEEXT)
	$(AM_V_CXXLD)$(conv_stroke_LINK) $(conv_stroke_OBJECTS) $(conv_stroke_LDADD) $(LIBS)

distortions$(EXEEXT): $(distortions_OBJECTS) $(distortions_DEPENDENCIES) $(EXTRA_distortions_DEPENDENCIES) 
	@rm -f distortions$(EXEEXT)
	$(AM_V_CXXLD)$(distortions_LINK) $(distortions_OBJECTS) $(distortions_LDADD) $(LIBS)

freetype_test$(EXEEXT): $(freetype_test_OBJECTS) $(freetype_test_DEPENDENCIES) $(EXTRA_freetype_test_DEPENDENCIES) 
	@rm -f freetype_test$(EXEEXT)
	$(AM_V_CXXLD)$(freetype_test_LINK) $(freetype_test_OBJECTS) $(freetype_test_LDADD) $(LIBS)

gamma_correction$(EXEEXT): $(gamma_correction_OBJECTS) $(gamma_correction_DEPENDENCIES) $(EXTRA_gamma_correction_DEPENDENCIES) 
	@rm -f gamma_correction$(EXEEXT)
	$(AM_V_CXXLD)$(gamma_correction_LINK) $(gamma_correction_OBJECTS) $(gamma_correction_LDADD) $(LIBS)

gamma_ctrl$(EXEEXT): $(gamma_ctrl_OBJECTS) $(gamma_ctrl_DEPENDENCIES) $(EXTRA_gamma_ctrl_DEPENDENCIES) 
	@rm -f gamma_ctrl$(EXEEXT)
	$(AM_V_CXXLD)$(gamma_ctrl_LINK) $(gamma_ctrl_OBJECTS) $(gamma_ctrl_LDADD) $(LIBS)

gouraud$(EXEEXT): $(gouraud_OBJECTS) $(gouraud_DEPENDENCIES) $(EXTRA_gouraud_DEPENDENCIES) 
	@rm -f gouraud$(EXEEXT)
	$(AM_V_CXXLD)$(gouraud_LINK) $(gouraud_OBJECTS) $(gouraud_LDADD) $(LIBS)

gpc_test$(EXEEXT): $(gpc_test_OBJECTS) $(gpc_test_DEPENDENCIES) $(EXTRA_gpc_test_DEPENDENCIES) 
	@rm -f gpc_test$(EXEEXT)
	$(AM_V_CXXLD)$(gpc_test_LINK) $(gpc_test_OBJECTS) $(gpc_test_LDADD) $(LIBS)

gradients$(EXEEXT): $(gradients_OBJECTS) $(gradients_DEPENDENCIES) $(EXTRA_gradients_DEPENDENCIES) 
	@rm -f gradients$(EXEEXT)
	$(AM_V_CXXLD)$(gradients_LINK) $(gradients_OBJECTS) $(gradients_LDADD) $(LIBS)

graph_test$(EXEEXT): $(graph_test_OBJECTS) $(graph_test_DEPENDENCIES) $(EXTRA_graph_test_DEPENDENCIES) 
	@rm -f graph_test$(EXEEXT)
	$(AM_V_CXXLD)$(graph_test_LINK) $(graph_test_OBJECTS) $(graph_test_LDADD) $(LIBS)

idea$(EXEEXT): $(idea_OBJECTS) $(idea_DEPENDENCIES) $(EXTRA_idea_DEPENDENCIES) 
	@rm -f idea$(EXEEXT)
	$(AM_V_CXXLD)$(idea_LINK) $(idea_OBJECTS) $(idea_LDADD) $(LIBS)

image1$(EXEEXT): $(image1_OBJECTS) $(image1_DEPENDENCIES) $(EXTRA_image1_DEPENDENCIES) 
	@rm -f image1$(EXEEXT)
	$(AM_V_CXXLD)$(image1_LINK) $(image1_OBJECTS) $(image1_LDADD) $(LIBS)

image_alpha$(EXEEXT): $(image_alpha_OBJECTS) $(image_alpha_DEPENDENCIES) $(EXTRA_image_alpha_DEPENDENCIES) 
	@rm -f image_alpha$(EXEEXT)
	$(AM_V_CXXLD)$(image_alpha_LINK) $(image_alpha_OBJECTS) $(image_alpha_LDADD) $(LIBS)

image_filters$(EXEEXT): $(image_filters_OBJECTS) $(image_filters_DEPENDENCIES) $(EXTRA_image_filters_DEPENDENCIES) 
	@rm -f image_filters$(EXEEXT)
	$(AM_V_CXXLD)$(image_filters_LINK) $(image_filters_OBJECTS) $(image_filters_LDADD) $(LIBS)

image_filters2$(EXEEXT): $(image_filters2_OBJECTS) $(image_filters2_DEPENDENCIES) $(EXTRA_image_filters2_DEPENDENCIES) 
	@rm -f image_filters2$(EXEEXT)
	$(AM_V_CXXLD)$(image_filters2_LINK) $(image_filters2_OBJECTS) $(image_filters2_LDADD) $(LIBS)

image_fltr_graph$(EXEEXT): $(image_fltr_graph_OBJECTS) $(image_fltr_graph_DEPENDENCIES) $(EXTRA_image_fltr_graph_DEPENDENCIES) 
	@rm -f image_fltr_graph$(EXEEXT)
	$(AM_V_CXXLD)$(image_fltr_graph_LINK) $(image_fltr_graph_OBJECTS) $(image_fltr_graph_LDADD) $(LIBS)

image_perspective$(EXEEXT): $(image_perspective_OBJECTS) $(image_perspective_DEPENDENCIES) $(EXTRA_image_perspective_DEPENDENCIES) 
	@rm -f image_perspective$(EXEEXT)
	$(AM_V_CXXLD)$(image_perspective_LINK) $(image_perspective_OBJECTS) $(image_perspective_LDADD) $(LIBS)

image_resample$(EXEEXT): $(image_resample_OBJECTS) $(image_resample_DEPENDENCIES) $(EXTRA_image_resample_DEPENDENCIES) 
	@rm -f image_resample$(EXEEXT)
	$(AM_V_CXXLD)$(image_resample_LINK) $(image_resample_OBJECTS) $(image_resample_LDADD) $(LIBS)

image_transforms$(EXEEXT): $(image_transforms_OBJECTS) $(image_transforms_DEPENDENCIES) $(EXTRA_image_transforms_DEPENDENCIES) 
	@rm -f image_transforms$(EXEEXT)
	$(AM_V_CXXLD)$(image_transforms_LINK) $(image_transforms_OBJECTS) $(image_transforms_LDADD) $(LIBS)

line_patterns$(EXEEXT): $(line_patterns_OBJECTS) $(line_patterns_DEPENDENCIES) $(EXTRA_line_patterns_DEPENDENCIES) 
	@rm -f line_patterns$(EXEEXT)
	$(AM_V_CXXLD)$(line_patterns_LINK) $(line_patterns_OBJECTS) $(line_patterns_LDADD) $(LIBS)

lion$(EXEEXT): $(lion_OBJECTS) $(lion_DEPENDENCIES) $(EXTRA_lion_DEPENDENCIES) 
	@rm -f lion$(EXEEXT)
	$(AM_V_CXXLD)$(lion_LINK) $(lion_OBJECTS) $(lion_LDADD) $(LIBS)

lion_lens$(EXEEXT): $(lion_lens_OBJECTS) $(lion_lens_DEPENDENCIES) $(EXTRA_lion_lens_DEPENDENCIES) 
	@rm -f lion_lens$(EXEEXT)
	$(AM_V_CXXLD)$(lion_lens_LINK) $(lion_lens_OBJECTS) $(lion_lens_LDADD) $(LIBS)

lion_outline$(EXEEXT): $(lion_outline_OBJECTS) $(lion_outline_DEPENDENCIES) $(EXTRA_lion_outline_DEPENDENCIES) 
	@rm -f lion_outline$(EXEEXT)
	$(AM_V_CXXLD)$(lion_outline_LINK) $(lion_outline_OBJECTS) $(lion_outline_LDADD) $(LIBS)

mol_view$(EXEEXT): $(mol_view_OBJECTS) $(mol_view_DEPENDENCIES) $(EXTRA_mol_view_DEPENDENCIES) 
	@rm -f mol_view$(EXEEXT)
	$(AM_V_CXXLD)$(mol_view_LINK) $(mol_view_OBJECTS) $(mol_view_LDADD) $(LIBS)

multi_clip$(EXEEXT): $(multi_clip_OBJECTS) $(multi_clip_DEPENDENCIES) $(EXTRA_multi_clip_DEPENDENCIES) 
	@rm -f multi_clip$(EXEEXT)
	$(AM_V_CXXLD)$(multi_clip_LINK) $(multi_clip_OBJECTS) $(multi_clip_LDADD) $(LIBS)

pattern_fill$(EXEEXT): $(pattern_fill_OBJECTS) $(pattern_fill_DEPENDENCIES) $(EXTRA_pattern_fill_DEPENDENCIES) 
	@rm -f pattern_fill$(EXEEXT)
	$(AM_V_CXXLD)$(pattern_fill_LINK) $(pattern_fill_OBJECTS) $(pattern_fill_LDADD) $(LIBS)

pattern_perspective$(EXEEXT): $(pattern_perspective_OBJECTS) $(pattern_perspective_DEPENDENCIES) $(EXTRA_pattern_perspective_DEPENDENCIES) 
	@rm -f pattern_perspective$(EXEEXT)
	$(AM_V_CXXLD)$(pattern_perspective_LINK) $(pattern_perspective_OBJECTS) $(pattern_perspective_LDADD) $(LIBS)

pattern_resample$(EXEEXT): $(pattern_resample_OBJECTS) $(pattern_resample_DEPENDENCIES) $(EXTRA_pattern_resample_DEPENDENCIES) 
	@rm -f pattern_resample$(EXEEXT)
	$(AM_V_CXXLD)$(pattern_resample_LINK) $(pattern_resample_OBJECTS) $(pattern_resample_LDADD) $(LIBS)

perspective$(EXEEXT): $(perspective_OBJECTS) $(perspective_DEPENDENCIES) $(EXTRA_perspective_DEPENDENCIES) 
	@rm -f perspective$(EXEEXT)
	$(AM_V_CXXLD)$(perspective_LINK) $(perspective_OBJECTS) $(perspective_LDADD) $(LIBS)

polymorphic_renderer$(EXEEXT): $(polymorphic_renderer_OBJECTS) $(polymorphic_renderer_DEPENDENCIES) $(EXTRA_polymorphic_renderer_DEPENDENCIES) 
	@rm -f polymorphic_renderer$(EXEEXT)
	$(AM_V_CXXLD)$(polymorphic_renderer_LINK) $(polymorphic_renderer_OBJECTS) $(polymorphic_renderer_LDADD) $(LIBS)

raster_text$(EXEEXT): $(raster_text_OBJECTS) $(raster_text_DEPENDENCIES) $(EXTRA_raster_text_DEPENDENCIES) 
	@rm -f raster_text$(EXEEXT)
	$(AM_V_CXXLD)$(raster_text_LINK) $(raster_text_OBJECTS) $(raster_text_LDADD) $(LIBS)

rasterizers$(EXEEXT): $(rasterizers_OBJECTS) $(rasterizers_DEPENDENCIES) $(EXTRA_rasterizers_DEPENDENCIES) 
	@rm -f rasterizers$(EXEEXT)
	$(AM_V_CXXLD)$(rasterizers_LINK) $(rasterizers_OBJECTS) $(rasterizers_LDADD) $(LIBS)

rasterizers2$(EXEEXT): $(rasterizers2_OBJECTS) $(rasterizers2_DEPENDENCIES) $(EXTRA_rasterizers2_DEPENDENCIES) 
	@rm -f rasterizers2$(EXEEXT)
	$(AM_V_CXXLD)$(rasterizers2_LINK) $(rasterizers2_OBJECTS) $(rasterizers2_LDADD) $(LIBS)

rounded_rect$(EXEEXT): $(rounded_rect_OBJECTS) $(rounded_rect_DEPENDENCIES) $(EXTRA_rounded_rect_DEPENDENCIES) 
	@rm -f rounded_rect$(EXEEXT)
	$(AM_V_CXXLD)$(rounded_rect_LINK) $(rounded_rect_OBJECTS) $(rounded_rect_LDADD) $(LIBS)

scanline_boolean$(EXEEXT): $(scanline_boolean_OBJECTS) $(scanline_boolean_DEPENDENCIES) $(EXTRA_scanline_boolean_DEPENDENCIES) 
	@rm -f scanline_boolean$(EXEEXT)
	$(AM_V_CXXLD)$(scanline_boolean_LINK) $(scanline_boolean_OBJECTS) $(scanline_boolean_LDADD) $(LIBS)

scanline_boolean2$(EXEEXT): $(scanline_boolean2_OBJECTS) $(scanline_boolean2_DEPENDENCIES) $(EXTRA_scanline_boolean2_DEPENDENCIES) 
	@rm -f scanline_boolean2$(EXEEXT)
	$(AM_V_CXXLD)$(scanline_boolean2_LINK) $(scanline_boolean2_OBJECTS) $(scanline_boolean2_LDADD) $(LIBS)

simple_blur$(EXEEXT): $(simple_blur_OBJECTS) $(simple_blur_DEPENDENCIES) $(EXTRA_simple_blur_DEPENDENCIES) 
	@rm -f simple_blur$(EXEEXT)
	$(AM_V_CXXLD)$(simple_blur_LINK) $(simple_blur_OBJECTS) $(simple_blur_LDADD) $(LIBS)

trans_curve1$(EXEEXT): $(trans_curve1_OBJECTS) $(trans_curve1_DEPENDENCIES) $(EXTRA_trans_curve1_DEPENDENCIES) 
	@rm -f trans_curve1$(EXEEXT)
	$(AM_V_CXXLD)$(trans_curve1_LINK) $(trans_curve1_OBJECTS) $(trans_curve1_LDADD) $(LIBS)

trans_curve2$(EXEEXT): $(trans_curve2_OBJECTS) $(trans_curve2_DEPENDENCIES) $(EXTRA_trans_curve2_DEPENDENCIES) 
	@rm -f trans_curve2$(EXEEXT)
	$(AM_V_CXXLD)$(trans_curve2_LINK) $(trans_curve2_OBJECTS) $(trans_curve2_LDADD) $(LIBS)

trans_polar$(EXEEXT): $(trans_polar_OBJECTS) $(trans_polar_DEPENDENCIES) $(EXTRA_trans_polar_DEPENDENCIES) 
	@rm -f trans_polar$(EXEEXT)
	$(AM_V_CXXLD)$(trans_polar_LINK) $(trans_polar_OBJECTS) $(trans_polar_LDADD) $(LIBS)

truetype_test$(EXEEXT): $(truetype_test_OBJECTS) $(truetype_test_DEPENDENCIES) $(EXTRA_truetype_test_DEPENDENCIES) 
	@rm -f truetype_test$(EXEEXT)
	$(AM_V_CXXLD)$(truetype_test_LINK) $(truetype_test_OBJECTS) $(truetype_test_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

.cpp.o:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

freetype_test-freetype_test.o: freetype_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(freetype_test_CXXFLAGS) $(CXXFLAGS) -c -o freetype_test-freetype_test.o `test -f 'freetype_test.cpp' || echo '$(srcdir)/'`freetype_test.cpp

freetype_test-freetype_test.obj: freetype_test.cpp
	$(AM_V_CXX)$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(freetype_test_CXXFLAGS) $(CXXFLAGS) -c -o freetype_test-freetype_test.obj `if test -f 'freetype_test.cpp'; then $(CYGPATH_W) 'freetype_test.cpp'; else $(CYGPATH_W) '$(srcdir)/freetype_test.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
